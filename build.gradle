ext.driverVersion = '3.2.1'
ext.kotlin_version = '1.0.0'

buildscript {
    ext.kotlin_version = '1.0.0'
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.+'
        classpath 'com.bmuschko:gradle-nexus-plugin:2.2'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

subprojects {
    apply plugin: "kotlin"
    apply plugin: 'idea'
    apply plugin: 'optional-base'
    apply plugin: 'jacoco'

    group = 'com.antwerkz.gridfs'
    version = '0.1-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }

    dependencies {
        compile 'org.slf4j:slf4j-api:1.7.6', optional
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        testCompile 'org.testng:testng:6.9.10'
    }

    project.ext.buildingWith = { propertyName ->
        project.hasProperty(propertyName) && project.property(propertyName).toBoolean()
    }

    javadoc {
        options.author = true
        options.version = true
        options.links 'http://docs.oracle.com/javase/7/docs/api/'
        options.encoding = 'UTF-8'
        options.charSet 'UTF-8'
        options.docEncoding 'UTF-8'
    }

    test {
        useTestNG()

        jacoco {
            enabled = true
            append = false
//            destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
//            classDumpFile = file("$buildDir/jacoco/classpathdumps")
        }

    }

    task testCoverage(dependsOn: test)

}